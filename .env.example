# ============================================
# TaskMaster AI API Keys
# ============================================
# API Keys (Required to enable respective provider)
ANTHROPIC_API_KEY="your_anthropic_api_key_here"       # Required: Format: sk-ant-api03-...
PERPLEXITY_API_KEY="your_perplexity_api_key_here"     # Optional: Format: pplx-...
OPENAI_API_KEY="your_openai_api_key_here"             # Optional, for OpenAI models. Format: sk-proj-...
GOOGLE_API_KEY="your_google_api_key_here"             # Optional, for Google Gemini models.
MISTRAL_API_KEY="your_mistral_key_here"               # Optional, for Mistral AI models.
XAI_API_KEY="YOUR_XAI_KEY_HERE"                       # Optional, for xAI AI models.
GROQ_API_KEY="YOUR_GROQ_KEY_HERE"                     # Optional, for Groq models.
OPENROUTER_API_KEY="YOUR_OPENROUTER_KEY_HERE"         # Optional, for OpenRouter models.
AZURE_OPENAI_API_KEY="your_azure_key_here"            # Optional, for Azure OpenAI models (requires endpoint in .taskmaster/config.json).
OLLAMA_API_KEY="your_ollama_api_key_here"             # Optional: For remote Ollama servers that require authentication.
GITHUB_API_KEY="your_github_api_key_here"             # Optional: For GitHub import/export features. Format: ghp_... or github_pat_...

# ============================================
# Linear API Configuration (Task 10.2)
# ============================================
# Linear Personal Access Token
# Generate: Linear Settings → API → Create new API Key
# Format: lin_api_xxxxxxxxxxxxxxxxxxxxxxxx
# Documentation: docs/configuration/linear-authentication-setup.md
LINEAR_PAT="lin_api_your_token_here"

# Linear Workspace Configuration
LINEAR_WORKSPACE_ID="kellerai"
LINEAR_WORKSPACE_NAME="KellerAI"

# Integration Settings
LINEAR_SYNC_ENABLED="true"
LINEAR_BIDIRECTIONAL_SYNC="true"

# Webhook Configuration
# Webhook URL: https://app.coderabbit.ai/webhooks/linear (or your self-hosted endpoint)
# Generate secret: openssl rand -hex 32
LINEAR_WEBHOOK_URL="https://app.coderabbit.ai/webhooks/linear"
LINEAR_WEBHOOK_SECRET="generate_with_openssl_rand_hex_32"

# Polling Configuration (fallback if webhooks fail)
LINEAR_POLL_INTERVAL_SECONDS="300"
LINEAR_POLL_ENABLED="false"

# Rate Limiting
LINEAR_MAX_REQUESTS_PER_MINUTE="25"
LINEAR_BURST_ALLOWANCE="50"

# Retry Configuration
LINEAR_MAX_RETRIES="3"
LINEAR_RETRY_DELAY_MS="1000"
LINEAR_RETRY_BACKOFF_MULTIPLIER="2"

# Logging
LINEAR_LOG_LEVEL="info"
LINEAR_LOG_API_CALLS="false"

# Feature Flags
LINEAR_SCOPE_VALIDATION_ENABLED="true"
LINEAR_AUTO_STATUS_UPDATE="true"
LINEAR_COMMENT_SYNC_ENABLED="true"

# ============================================
# MCP Server Configuration (Task 9)
# ============================================

# Context7 MCP Server (Library Documentation)
# Get API key from: https://context7.com
CONTEXT7_API_KEY="your_context7_api_key_here"

# Confluence MCP Server (Internal Documentation)
# Generate token: https://id.atlassian.com/manage/api-tokens
CONFLUENCE_BASE_URL="https://kellerai.atlassian.net/wiki"
CONFLUENCE_USERNAME="engineering@kellerai.com"
CONFLUENCE_API_TOKEN="your_confluence_api_token_here"

# Notion MCP Server (Product Requirements)
# Create integration: https://www.notion.so/my-integrations
# Format: secret_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
NOTION_API_TOKEN="secret_your_notion_integration_token_here"

# KellerAI Custom MCP Server
# Path to repository root (defaults to current directory)
KELLERAI_REPO_ROOT="${PWD}"

# Optional: Redis Caching (for production deployments)
REDIS_HOST="localhost"
REDIS_PORT="6379"
REDIS_PASSWORD=""

# Optional: Monitoring and Error Tracking
SENTRY_DSN="your_sentry_dsn_here"
DATADOG_API_KEY="your_datadog_api_key_here"

# Optional: AWS Secrets Manager (Production)
AWS_REGION="us-east-1"
AWS_SECRETS_MANAGER_SECRET_ID="kellerai/mcp-credentials"