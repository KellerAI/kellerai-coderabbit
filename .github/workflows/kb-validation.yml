name: Knowledge Base Validation

on:
	pull_request:
		paths:
			- 'docs/knowledge-base/**'
			- '.cursorrules'
			- 'CLAUDE.md'
			- 'scripts/validate-kb-versions.py'
			- 'scripts/verify-changelog.py'
	workflow_dispatch:

jobs:
	validate:
		runs-on: ubuntu-latest
		steps:
			- name: Checkout code
				uses: actions/checkout@v4

			- name: Set up Python
				uses: actions/setup-python@v5
				with:
					python-version: '3.13'

			- name: Install dependencies
				run: |
					python -m pip install --upgrade pip
					pip install pyyaml ruff mypy pytest

			- name: Run Ruff linting
				run: |
					ruff check scripts/*.py --config pyproject.toml

			- name: Run Ruff formatting check
				run: |
					ruff format --check scripts/*.py --config pyproject.toml

			- name: Run Mypy type checking
				run: |
					mypy scripts/*.py --config-file pyproject.toml

			- name: Install CodeRabbit CLI
				run: |
					curl -fsSL https://coderabbit.ai/install.sh | sh
					coderabbit --version

			- name: Authenticate CodeRabbit CLI
				run: |
					coderabbit auth login --api-key ${{ secrets.CODERABBIT_API_KEY }}
				env:
					CODERABBIT_API_KEY: ${{ secrets.CODERABBIT_API_KEY }}

			- name: Run CodeRabbit review on KB changes
				run: |
					coderabbit review --plain --type uncommitted > coderabbit-results.txt 2>&1 || true
					
					if grep -q "severity: critical" coderabbit-results.txt; then
						echo "❌ Critical issues found by CodeRabbit"
						cat coderabbit-results.txt
						exit 1
					fi
					
					echo "✅ CodeRabbit review passed"
					cat coderabbit-results.txt
				timeout-minutes: 5

			- name: Validate version numbers
				run: |
					python scripts/validate-kb-versions.py

			- name: Verify changelog entries
				run: |
					python scripts/verify-changelog.py

			- name: Check for broken links
				run: |
					npm install -g markdown-link-check
					find docs/knowledge-base -name '*.md' -exec markdown-link-check {} \;

			- name: Validate markdown syntax
				run: |
					npm install -g markdownlint-cli
					markdownlint 'docs/knowledge-base/**/*.md' --config .markdownlint.json

			- name: Run integration tests
				run: |
					pytest tests/knowledge_base/ -v --cov=scripts --cov-report=term-missing
